<?php namespace Opifer\BlogBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Opifer\BlogBundle\Validator\Constraints\ContainsLetters;
use Symfony\Component\Validator\Constraints as Constraint;
use Symfony\Component\Validator\Mapping\ClassMetadata;

/**
 * Enquiry
 *
 * @ORM\Table()
 * @ORM\Entity
 */
class Enquiry
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     */
    private $name;

    /**
     * @var string
     *
     * @ORM\Column(name="email", type="string", length=255)
     */
    private $email;

    /**
     * @var string
     *
     * @ORM\Column(name="subject", type="string", length=255)
     */
    private $subject;

    /**
     * @var string
     *
     * @ORM\Column(name="body", type="text")
     */
    private $body;


    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return Enquiry
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string 
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set email
     *
     * @param string $email
     * @return Enquiry
     */
    public function setEmail($email)
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Get email
     *
     * @return string 
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Set subject
     *
     * @param string $subject
     * @return Enquiry
     */
    public function setSubject($subject)
    {
        $this->subject = $subject;

        return $this;
    }

    /**
     * Get subject
     *
     * @return string 
     */
    public function getSubject()
    {
        return $this->subject;
    }

    /**
     * Set body
     *
     * @param string $body
     * @return Enquiry
     */
    public function setBody($body)
    {
        $this->body = $body;

        return $this;
    }

    /**
     * Get body
     *
     * @return string 
     */
    public function getBody()
    {
        return $this->body;
    }

    public static function loadValidatorMetadata(ClassMetadata $metadata)
    {
        $metadata->addPropertyConstraint('name', new Constraint\NotBlank());
        $metadata->addPropertyConstraint('name', new ContainsLetters());
        $metadata->addPropertyConstraint('name', new Constraint\Length(array(
            'min' => 3
                                                                      )));;


        $metadata->addPropertyConstraint('email', new Constraint\Email(array(
            'messege' => 'Your Email address doesn\'t seem to be valid, please provide us with a real one.'
                                                                       )));
        $metadata->addPropertyConstraint('email', new Constraint\Length(array(
            'max' => 50,
            'maxMessege' => 'Your email address can not be longer than {{ limit }} characters in length.'
                                                                        )));
    }
}
